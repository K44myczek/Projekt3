using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Diagnostics;

namespace Projekt3
{
    class Program
    {
        public static int[] vksztaltna(int[] tab) //zwracanie tablicy wype³nionej v-ksztaltnie
        {
            int x = tab.Length;
            int y = 2;
            for (int i = 0; i < tab.Length; i++, x -= 2)
            {
                if (i == tab.Length / 2)
                {
                    tab[i] = 1;
                }
                else if (i < tab.Length / 2)
                {
                    tab[i] = x;
                }
                else
                {
                    tab[i] = y;
                    y += 2;
                }
            }
            return tab;
        }
        public static int[] rosnaca(int[] tab)//zwracanie tablicy wype³nionej rosn¹co
        {
            for (int i = 0; i < tab.Length; i++)
            {
                tab[i] = i + 1;
            }
            return tab;
        }
        public static int[] malejaca(int[] tab)//zwracanie tablicy wype³nionej malej¹co
        {
            int x = tab.Length;
            for (int i = 0; i < tab.Length; i++)
            {
                tab[i] = x;
                x--;
            }
            return tab;
        }
        public static int[] stala(int[] tab)//zwracanie tablicy wype³nionej sta³ymi wartoœciami
        {
            for (int i = 0; i < tab.Length; i++)
            {
                tab[i] = tab.Length;
            }
            return tab;
        }
        public static int[] losowa(int[] tab)//zwracanie tablicy wype³nionej losowo
        {
            Random rand = new Random();
            for (int i = 0; i < tab.Length; i++)
            {
                tab[i] = rand.Next(50000, 200000);
            }
            return tab;
        }
        public static int[] CocktailSort(int[] tab)//funkcja sortowania koktajlowego
        {
            int left = 1, right = tab.Length - 1, k = tab.Length - 1;
            do
            {
                for (int j = right; j >= left; j--)
                    if (tab[j - 1] > tab[j])
                    {
                        int temp = tab[j - 1];
                        tab[j - 1] = tab[j];
                        tab[j] = temp;
                        k = j;
                    }

                left = k + 1;

                for (int j = left; j <= right; j++)
                    if (tab[j - 1] > tab[j])
                    {
                        int temp = tab[j - 1];
                        tab[j - 1] = tab[j];
                        tab[j] = temp;
                        k = j;
                    }

                right = k - 1;
            } while
                (left <= right);
            return tab;
        }

        static void Main(string[] args)
        {
            Stopwatch stopwatch = new Stopwatch();
            Console.WriteLine("rozmiar\tlosowa\t\trosnaca\t\tmalejaca\tstala\t\tvksztaltna");
            for (int i = 50000; i <= 200000; i += 10000)
            {
                int[] tab = new int[i];
                Console.Write(i + "\t");
                losowa(tab);//metoda zwracaj¹ca tablicê losowa
                stopwatch.Start();//rozpoczêcie pomiaru czasu
                CocktailSort(tab);//zaimplementowanie tablicy losowej do metody sortuj¹cej
                stopwatch.Stop();//zakoñczenie pomiaru czasu
                Console.Write(stopwatch.Elapsed.TotalSeconds.ToString("F8") + "\t");
                stopwatch.Reset();//reset pomiaru
                rosnaca(tab);//metoda zwracaj¹ca tablicê rosnaca
                stopwatch.Start();//rozpoczêcie pomiaru czasu
                CocktailSort(tab);//zaimplementowanie tablicy rosn¹cej do metody sortuj¹cej
                stopwatch.Stop();//zakoñcznie pomiaru czasu
                Console.Write(stopwatch.Elapsed.TotalSeconds.ToString("F8") + "\t");
                stopwatch.Reset();//reset pomiaru
                malejaca(tab);//metoda zwracaj¹ca tablicê malejaca
                stopwatch.Start();//rozpoczêcie pomiaru czasu
                CocktailSort(tab);//zaimplementowanie tablicy malej¹cej do metody sortuj¹cej
                stopwatch.Stop();//zakoñczenie pomiaru czasu
                Console.Write(stopwatch.Elapsed.TotalSeconds.ToString("F8") + "\t");
                stopwatch.Reset();//reset pomiaru
                stala(tab);//metoda zwracaj¹ca tablicê stala
                stopwatch.Start();//rozpoczêcie pomiaru czasu
                CocktailSort(tab);//zaimplementowanie tablicy sta³ej do metody sortuj¹cej
                stopwatch.Stop();//zakoñcznie pomiaru czasu
                Console.Write(stopwatch.Elapsed.TotalSeconds.ToString("F8") + "\t");
                stopwatch.Reset();//reset pomiaru
                vksztaltna(tab);//metoda zwracaj¹ca tablicê vksztaltna
                stopwatch.Start();//rozpoczêcie pomiaru czasu
                CocktailSort(tab);//zaimplementowanie tablicy vksztaltnej do metody sortuj¹cej
                stopwatch.Stop();//zakoñcznie pomiaru czasu
                Console.Write(stopwatch.Elapsed.TotalSeconds.ToString("F8") + "\n");
                stopwatch.Reset();//reset pomiaru
            }
        }
    }
}


